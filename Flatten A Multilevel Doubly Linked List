"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Node') -> 'Node':
        stack =[]
        curr= head
        while curr or stack:
            if curr:
                if curr.child:
                    stack.append(curr.next)
                    curr.next=curr.child
                    curr.child=None
                    prev=curr
                    curr=curr.next
                    curr.prev=prev
                else:
                    prev=curr
                    curr=curr.next
            else:
                curr=stack.pop()
                
                prev.next=curr
                if curr:
                    curr.prev=prev
        return head
            
